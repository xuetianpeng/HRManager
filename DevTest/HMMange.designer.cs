#pragma warning disable 1591
//------------------------------------------------------------------------------
// <auto-generated>
//     此代码由工具生成。
//     运行时版本:4.0.30319.42000
//
//     对此文件的更改可能会导致不正确的行为，并且如果
//     重新生成代码，这些更改将会丢失。
// </auto-generated>
//------------------------------------------------------------------------------

namespace DevTest
{
	using System.Data.Linq;
	using System.Data.Linq.Mapping;
	using System.Data;
	using System.Collections.Generic;
	using System.Reflection;
	using System.Linq;
	using System.Linq.Expressions;
	using System.ComponentModel;
	using System;
	
	
	[global::System.Data.Linq.Mapping.DatabaseAttribute(Name="HManager")]
	public partial class HMMangeDataContext : System.Data.Linq.DataContext
	{
		
		private static System.Data.Linq.Mapping.MappingSource mappingSource = new AttributeMappingSource();
		
    #region 可扩展性方法定义
    partial void OnCreated();
    partial void InsertT_Department(T_Department instance);
    partial void UpdateT_Department(T_Department instance);
    partial void DeleteT_Department(T_Department instance);
    partial void InsertT_Employees(T_Employees instance);
    partial void UpdateT_Employees(T_Employees instance);
    partial void DeleteT_Employees(T_Employees instance);
    partial void InsertT_InCome_Type(T_InCome_Type instance);
    partial void UpdateT_InCome_Type(T_InCome_Type instance);
    partial void DeleteT_InCome_Type(T_InCome_Type instance);
    partial void InsertT_Post(T_Post instance);
    partial void UpdateT_Post(T_Post instance);
    partial void DeleteT_Post(T_Post instance);
    partial void InsertT_Spend(T_Spend instance);
    partial void UpdateT_Spend(T_Spend instance);
    partial void DeleteT_Spend(T_Spend instance);
    partial void InsertT_Spend_Type(T_Spend_Type instance);
    partial void UpdateT_Spend_Type(T_Spend_Type instance);
    partial void DeleteT_Spend_Type(T_Spend_Type instance);
    partial void InsertT_Commission(T_Commission instance);
    partial void UpdateT_Commission(T_Commission instance);
    partial void DeleteT_Commission(T_Commission instance);
    partial void InsertT_Pay_Type(T_Pay_Type instance);
    partial void UpdateT_Pay_Type(T_Pay_Type instance);
    partial void DeleteT_Pay_Type(T_Pay_Type instance);
    partial void InsertT_ReSume(T_ReSume instance);
    partial void UpdateT_ReSume(T_ReSume instance);
    partial void DeleteT_ReSume(T_ReSume instance);
    partial void InsertT_State(T_State instance);
    partial void UpdateT_State(T_State instance);
    partial void DeleteT_State(T_State instance);
    partial void InsertT_Sign(T_Sign instance);
    partial void UpdateT_Sign(T_Sign instance);
    partial void DeleteT_Sign(T_Sign instance);
    partial void InsertT_Enterprise(T_Enterprise instance);
    partial void UpdateT_Enterprise(T_Enterprise instance);
    partial void DeleteT_Enterprise(T_Enterprise instance);
    partial void InsertT_Position(T_Position instance);
    partial void UpdateT_Position(T_Position instance);
    partial void DeleteT_Position(T_Position instance);
    partial void InsertT_EmployessPw(T_EmployessPw instance);
    partial void UpdateT_EmployessPw(T_EmployessPw instance);
    partial void DeleteT_EmployessPw(T_EmployessPw instance);
    partial void InsertAppointments(Appointments instance);
    partial void UpdateAppointments(Appointments instance);
    partial void DeleteAppointments(Appointments instance);
    partial void InsertResources(Resources instance);
    partial void UpdateResources(Resources instance);
    partial void DeleteResources(Resources instance);
    partial void InsertT_Achievement(T_Achievement instance);
    partial void UpdateT_Achievement(T_Achievement instance);
    partial void DeleteT_Achievement(T_Achievement instance);
    #endregion
		
		public HMMangeDataContext() : 
				base(global::DevTest.Properties.Settings.Default.HManagerConnectionString, mappingSource)
		{
			OnCreated();
		}
		
		public HMMangeDataContext(string connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HMMangeDataContext(System.Data.IDbConnection connection) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HMMangeDataContext(string connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public HMMangeDataContext(System.Data.IDbConnection connection, System.Data.Linq.Mapping.MappingSource mappingSource) : 
				base(connection, mappingSource)
		{
			OnCreated();
		}
		
		public System.Data.Linq.Table<T_Department> T_Department
		{
			get
			{
				return this.GetTable<T_Department>();
			}
		}
		
		public System.Data.Linq.Table<T_Employees> T_Employees
		{
			get
			{
				return this.GetTable<T_Employees>();
			}
		}
		
		public System.Data.Linq.Table<T_InCome_Type> T_InCome_Type
		{
			get
			{
				return this.GetTable<T_InCome_Type>();
			}
		}
		
		public System.Data.Linq.Table<T_Post> T_Post
		{
			get
			{
				return this.GetTable<T_Post>();
			}
		}
		
		public System.Data.Linq.Table<T_Spend> T_Spend
		{
			get
			{
				return this.GetTable<T_Spend>();
			}
		}
		
		public System.Data.Linq.Table<T_Spend_Type> T_Spend_Type
		{
			get
			{
				return this.GetTable<T_Spend_Type>();
			}
		}
		
		public System.Data.Linq.Table<T_Commission> T_Commission
		{
			get
			{
				return this.GetTable<T_Commission>();
			}
		}
		
		public System.Data.Linq.Table<V_Commission> V_Commission
		{
			get
			{
				return this.GetTable<V_Commission>();
			}
		}
		
		public System.Data.Linq.Table<T_Pay_Type> T_Pay_Type
		{
			get
			{
				return this.GetTable<T_Pay_Type>();
			}
		}
		
		public System.Data.Linq.Table<T_ReSume> T_ReSume
		{
			get
			{
				return this.GetTable<T_ReSume>();
			}
		}
		
		public System.Data.Linq.Table<V_Department> V_Department
		{
			get
			{
				return this.GetTable<V_Department>();
			}
		}
		
		public System.Data.Linq.Table<V_Employees> V_Employees
		{
			get
			{
				return this.GetTable<V_Employees>();
			}
		}
		
		public System.Data.Linq.Table<T_State> T_State
		{
			get
			{
				return this.GetTable<T_State>();
			}
		}
		
		public System.Data.Linq.Table<T_Sign> T_Sign
		{
			get
			{
				return this.GetTable<T_Sign>();
			}
		}
		
		public System.Data.Linq.Table<V_ReSume> V_ReSume
		{
			get
			{
				return this.GetTable<V_ReSume>();
			}
		}
		
		public System.Data.Linq.Table<T_Enterprise> T_Enterprise
		{
			get
			{
				return this.GetTable<T_Enterprise>();
			}
		}
		
		public System.Data.Linq.Table<T_Position> T_Position
		{
			get
			{
				return this.GetTable<T_Position>();
			}
		}
		
		public System.Data.Linq.Table<T_EmployessPw> T_EmployessPw
		{
			get
			{
				return this.GetTable<T_EmployessPw>();
			}
		}
		
		public System.Data.Linq.Table<Appointments> Appointments
		{
			get
			{
				return this.GetTable<Appointments>();
			}
		}
		
		public System.Data.Linq.Table<Resources> Resources
		{
			get
			{
				return this.GetTable<Resources>();
			}
		}
		
		public System.Data.Linq.Table<T_Achievement> T_Achievement
		{
			get
			{
				return this.GetTable<T_Achievement>();
			}
		}
		
		public System.Data.Linq.Table<T_PayList> T_PayList
		{
			get
			{
				return this.GetTable<T_PayList>();
			}
		}
		
		public System.Data.Linq.Table<T_ChargeList> T_ChargeList
		{
			get
			{
				return this.GetTable<T_ChargeList>();
			}
		}
		
		public System.Data.Linq.Table<V_Achievement> V_Achievement
		{
			get
			{
				return this.GetTable<V_Achievement>();
			}
		}
		
		[global::System.Data.Linq.Mapping.FunctionAttribute(Name="dbo.GETUNTREATED_RESUME")]
		public ISingleResult<GETUNTREATED_RESUMEResult> GETUNTREATED_RESUME([global::System.Data.Linq.Mapping.ParameterAttribute(Name="ByDate1", DbType="DateTime")] System.Nullable<System.DateTime> byDate1, [global::System.Data.Linq.Mapping.ParameterAttribute(Name="ByDate2", DbType="DateTime")] System.Nullable<System.DateTime> byDate2)
		{
			IExecuteResult result = this.ExecuteMethodCall(this, ((MethodInfo)(MethodInfo.GetCurrentMethod())), byDate1, byDate2);
			return ((ISingleResult<GETUNTREATED_RESUMEResult>)(result.ReturnValue));
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Department")]
	public partial class T_Department : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Department_ID;
		
		private string _Department_Name;
		
		private System.Nullable<int> _Manager;
		
		private System.Nullable<int> _Auxiliary_Manager;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On部门编号Changing(int value);
    partial void On部门编号Changed();
    partial void On部门名称Changing(string value);
    partial void On部门名称Changed();
    partial void On部门经理Changing(System.Nullable<int> value);
    partial void On部门经理Changed();
    partial void On辅助经理Changing(System.Nullable<int> value);
    partial void On辅助经理Changed();
    #endregion
		
		public T_Department()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_ID", Storage="_Department_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 部门编号
		{
			get
			{
				return this._Department_ID;
			}
			set
			{
				if ((this._Department_ID != value))
				{
					this.On部门编号Changing(value);
					this.SendPropertyChanging();
					this._Department_ID = value;
					this.SendPropertyChanged("部门编号");
					this.On部门编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_Name", Storage="_Department_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 部门名称
		{
			get
			{
				return this._Department_Name;
			}
			set
			{
				if ((this._Department_Name != value))
				{
					this.On部门名称Changing(value);
					this.SendPropertyChanging();
					this._Department_Name = value;
					this.SendPropertyChanged("部门名称");
					this.On部门名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Manager", Storage="_Manager", DbType="Int")]
		public System.Nullable<int> 部门经理
		{
			get
			{
				return this._Manager;
			}
			set
			{
				if ((this._Manager != value))
				{
					this.On部门经理Changing(value);
					this.SendPropertyChanging();
					this._Manager = value;
					this.SendPropertyChanged("部门经理");
					this.On部门经理Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Auxiliary_Manager", Storage="_Auxiliary_Manager", DbType="Int")]
		public System.Nullable<int> 辅助经理
		{
			get
			{
				return this._Auxiliary_Manager;
			}
			set
			{
				if ((this._Auxiliary_Manager != value))
				{
					this.On辅助经理Changing(value);
					this.SendPropertyChanging();
					this._Auxiliary_Manager = value;
					this.SendPropertyChanged("辅助经理");
					this.On辅助经理Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Employees")]
	public partial class T_Employees : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Emp_ID;
		
		private int _Department_ID;
		
		private string _Emp_Name;
		
		private int _Post_ID;
		
		private string _EDP_IDCard;
		
		private System.DateTime _Emp_In;
		
		private System.Nullable<System.DateTime> _Emp_Out;
		
		private string _Phone;
		
		private decimal _Other_Wages;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On员工编号Changing(int value);
    partial void On员工编号Changed();
    partial void On部门编号Changing(int value);
    partial void On部门编号Changed();
    partial void On姓名Changing(string value);
    partial void On姓名Changed();
    partial void On职位编号Changing(int value);
    partial void On职位编号Changed();
    partial void On身份证Changing(string value);
    partial void On身份证Changed();
    partial void On入职时间Changing(System.DateTime value);
    partial void On入职时间Changed();
    partial void On离职时间Changing(System.Nullable<System.DateTime> value);
    partial void On离职时间Changed();
    partial void On手机Changing(string value);
    partial void On手机Changed();
    partial void On津贴Changing(decimal value);
    partial void On津贴Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    #endregion
		
		public T_Employees()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emp_ID", Storage="_Emp_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 员工编号
		{
			get
			{
				return this._Emp_ID;
			}
			set
			{
				if ((this._Emp_ID != value))
				{
					this.On员工编号Changing(value);
					this.SendPropertyChanging();
					this._Emp_ID = value;
					this.SendPropertyChanged("员工编号");
					this.On员工编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_ID", Storage="_Department_ID", DbType="Int NOT NULL")]
		public int 部门编号
		{
			get
			{
				return this._Department_ID;
			}
			set
			{
				if ((this._Department_ID != value))
				{
					this.On部门编号Changing(value);
					this.SendPropertyChanging();
					this._Department_ID = value;
					this.SendPropertyChanged("部门编号");
					this.On部门编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emp_Name", Storage="_Emp_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 姓名
		{
			get
			{
				return this._Emp_Name;
			}
			set
			{
				if ((this._Emp_Name != value))
				{
					this.On姓名Changing(value);
					this.SendPropertyChanging();
					this._Emp_Name = value;
					this.SendPropertyChanged("姓名");
					this.On姓名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Post_ID", Storage="_Post_ID", DbType="Int NOT NULL")]
		public int 职位编号
		{
			get
			{
				return this._Post_ID;
			}
			set
			{
				if ((this._Post_ID != value))
				{
					this.On职位编号Changing(value);
					this.SendPropertyChanging();
					this._Post_ID = value;
					this.SendPropertyChanged("职位编号");
					this.On职位编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EDP_IDCard", Storage="_EDP_IDCard", DbType="VarChar(20)")]
		public string 身份证
		{
			get
			{
				return this._EDP_IDCard;
			}
			set
			{
				if ((this._EDP_IDCard != value))
				{
					this.On身份证Changing(value);
					this.SendPropertyChanging();
					this._EDP_IDCard = value;
					this.SendPropertyChanged("身份证");
					this.On身份证Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emp_In", Storage="_Emp_In", DbType="Date NOT NULL")]
		public System.DateTime 入职时间
		{
			get
			{
				return this._Emp_In;
			}
			set
			{
				if ((this._Emp_In != value))
				{
					this.On入职时间Changing(value);
					this.SendPropertyChanging();
					this._Emp_In = value;
					this.SendPropertyChanged("入职时间");
					this.On入职时间Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emp_Out", Storage="_Emp_Out", DbType="Date")]
		public System.Nullable<System.DateTime> 离职时间
		{
			get
			{
				return this._Emp_Out;
			}
			set
			{
				if ((this._Emp_Out != value))
				{
					this.On离职时间Changing(value);
					this.SendPropertyChanging();
					this._Emp_Out = value;
					this.SendPropertyChanged("离职时间");
					this.On离职时间Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Phone", Storage="_Phone", DbType="VarChar(20)")]
		public string 手机
		{
			get
			{
				return this._Phone;
			}
			set
			{
				if ((this._Phone != value))
				{
					this.On手机Changing(value);
					this.SendPropertyChanging();
					this._Phone = value;
					this.SendPropertyChanged("手机");
					this.On手机Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Other_Wages", Storage="_Other_Wages", DbType="Money NOT NULL")]
		public decimal 津贴
		{
			get
			{
				return this._Other_Wages;
			}
			set
			{
				if ((this._Other_Wages != value))
				{
					this.On津贴Changing(value);
					this.SendPropertyChanging();
					this._Other_Wages = value;
					this.SendPropertyChanged("津贴");
					this.On津贴Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Remark", Storage="_Remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.On备注Changing(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("备注");
					this.On备注Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_InCome_Type")]
	public partial class T_InCome_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _InCome_Type_ID;
		
		private string _InCome_Type_Name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On收入类型编号Changing(int value);
    partial void On收入类型编号Changed();
    partial void On收入类型Changing(string value);
    partial void On收入类型Changed();
    #endregion
		
		public T_InCome_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="InCome_Type_ID", Storage="_InCome_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 收入类型编号
		{
			get
			{
				return this._InCome_Type_ID;
			}
			set
			{
				if ((this._InCome_Type_ID != value))
				{
					this.On收入类型编号Changing(value);
					this.SendPropertyChanging();
					this._InCome_Type_ID = value;
					this.SendPropertyChanged("收入类型编号");
					this.On收入类型编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="InCome_Type_Name", Storage="_InCome_Type_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 收入类型
		{
			get
			{
				return this._InCome_Type_Name;
			}
			set
			{
				if ((this._InCome_Type_Name != value))
				{
					this.On收入类型Changing(value);
					this.SendPropertyChanging();
					this._InCome_Type_Name = value;
					this.SendPropertyChanged("收入类型");
					this.On收入类型Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Post")]
	public partial class T_Post : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Post_ID;
		
		private string _Post_Name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On职位编号Changing(int value);
    partial void On职位编号Changed();
    partial void On职位名称Changing(string value);
    partial void On职位名称Changed();
    #endregion
		
		public T_Post()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Post_ID", Storage="_Post_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 职位编号
		{
			get
			{
				return this._Post_ID;
			}
			set
			{
				if ((this._Post_ID != value))
				{
					this.On职位编号Changing(value);
					this.SendPropertyChanging();
					this._Post_ID = value;
					this.SendPropertyChanged("职位编号");
					this.On职位编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Post_Name", Storage="_Post_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 职位名称
		{
			get
			{
				return this._Post_Name;
			}
			set
			{
				if ((this._Post_Name != value))
				{
					this.On职位名称Changing(value);
					this.SendPropertyChanging();
					this._Post_Name = value;
					this.SendPropertyChanged("职位名称");
					this.On职位名称Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Spend")]
	public partial class T_Spend : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Spend_ID;
		
		private int _Spend_Type_ID;
		
		private System.DateTime _Spend_Date;
		
		private int _Depart;
		
		private int _Pay_Type_ID;
		
		private string _Remark;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On支出编号Changing(int value);
    partial void On支出编号Changed();
    partial void On支出类型编号Changing(int value);
    partial void On支出类型编号Changed();
    partial void On支出日期Changing(System.DateTime value);
    partial void On支出日期Changed();
    partial void On部门编号Changing(int value);
    partial void On部门编号Changed();
    partial void On支付类型编号Changing(int value);
    partial void On支付类型编号Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    #endregion
		
		public T_Spend()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Spend_ID", Storage="_Spend_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 支出编号
		{
			get
			{
				return this._Spend_ID;
			}
			set
			{
				if ((this._Spend_ID != value))
				{
					this.On支出编号Changing(value);
					this.SendPropertyChanging();
					this._Spend_ID = value;
					this.SendPropertyChanged("支出编号");
					this.On支出编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Spend_Type_ID", Storage="_Spend_Type_ID", DbType="Int NOT NULL")]
		public int 支出类型编号
		{
			get
			{
				return this._Spend_Type_ID;
			}
			set
			{
				if ((this._Spend_Type_ID != value))
				{
					this.On支出类型编号Changing(value);
					this.SendPropertyChanging();
					this._Spend_Type_ID = value;
					this.SendPropertyChanged("支出类型编号");
					this.On支出类型编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Spend_Date", Storage="_Spend_Date", DbType="Date NOT NULL")]
		public System.DateTime 支出日期
		{
			get
			{
				return this._Spend_Date;
			}
			set
			{
				if ((this._Spend_Date != value))
				{
					this.On支出日期Changing(value);
					this.SendPropertyChanging();
					this._Spend_Date = value;
					this.SendPropertyChanged("支出日期");
					this.On支出日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Depart", Storage="_Depart", DbType="Int NOT NULL")]
		public int 部门编号
		{
			get
			{
				return this._Depart;
			}
			set
			{
				if ((this._Depart != value))
				{
					this.On部门编号Changing(value);
					this.SendPropertyChanging();
					this._Depart = value;
					this.SendPropertyChanged("部门编号");
					this.On部门编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Pay_Type_ID", Storage="_Pay_Type_ID", DbType="Int NOT NULL")]
		public int 支付类型编号
		{
			get
			{
				return this._Pay_Type_ID;
			}
			set
			{
				if ((this._Pay_Type_ID != value))
				{
					this.On支付类型编号Changing(value);
					this.SendPropertyChanging();
					this._Pay_Type_ID = value;
					this.SendPropertyChanged("支付类型编号");
					this.On支付类型编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Remark", Storage="_Remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.On备注Changing(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("备注");
					this.On备注Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Spend_Type")]
	public partial class T_Spend_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Spend_Type_ID;
		
		private string _Spend_Type_Name;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On支出类型编号Changing(int value);
    partial void On支出类型编号Changed();
    partial void On支出类型Changing(string value);
    partial void On支出类型Changed();
    #endregion
		
		public T_Spend_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Spend_Type_ID", Storage="_Spend_Type_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 支出类型编号
		{
			get
			{
				return this._Spend_Type_ID;
			}
			set
			{
				if ((this._Spend_Type_ID != value))
				{
					this.On支出类型编号Changing(value);
					this.SendPropertyChanging();
					this._Spend_Type_ID = value;
					this.SendPropertyChanged("支出类型编号");
					this.On支出类型编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Spend_Type_Name", Storage="_Spend_Type_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 支出类型
		{
			get
			{
				return this._Spend_Type_Name;
			}
			set
			{
				if ((this._Spend_Type_Name != value))
				{
					this.On支出类型Changing(value);
					this.SendPropertyChanging();
					this._Spend_Type_Name = value;
					this.SendPropertyChanged("支出类型");
					this.On支出类型Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Commission")]
	public partial class T_Commission : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _编号;
		
		private decimal _业绩下限;
		
		private decimal _业绩上限;
		
		private decimal _底薪;
		
		private decimal _奖金;
		
		private decimal _提成比率;
		
		private int _职务;
		
		private decimal _高端提成比率;
		
		private bool _高端标志;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On编号Changing(int value);
    partial void On编号Changed();
    partial void On业绩下限Changing(decimal value);
    partial void On业绩下限Changed();
    partial void On业绩上限Changing(decimal value);
    partial void On业绩上限Changed();
    partial void On底薪Changing(decimal value);
    partial void On底薪Changed();
    partial void On奖金Changing(decimal value);
    partial void On奖金Changed();
    partial void On提成比率Changing(decimal value);
    partial void On提成比率Changed();
    partial void On职务Changing(int value);
    partial void On职务Changed();
    partial void On高端提成比率Changing(decimal value);
    partial void On高端提成比率Changed();
    partial void On高端标志Changing(bool value);
    partial void On高端标志Changed();
    #endregion
		
		public T_Commission()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Commission_ID", Storage="_编号", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 编号
		{
			get
			{
				return this._编号;
			}
			set
			{
				if ((this._编号 != value))
				{
					this.On编号Changing(value);
					this.SendPropertyChanging();
					this._编号 = value;
					this.SendPropertyChanged("编号");
					this.On编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Low_limit", Storage="_业绩下限", DbType="Money NOT NULL")]
		public decimal 业绩下限
		{
			get
			{
				return this._业绩下限;
			}
			set
			{
				if ((this._业绩下限 != value))
				{
					this.On业绩下限Changing(value);
					this.SendPropertyChanging();
					this._业绩下限 = value;
					this.SendPropertyChanged("业绩下限");
					this.On业绩下限Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Up_limit", Storage="_业绩上限", DbType="Money NOT NULL")]
		public decimal 业绩上限
		{
			get
			{
				return this._业绩上限;
			}
			set
			{
				if ((this._业绩上限 != value))
				{
					this.On业绩上限Changing(value);
					this.SendPropertyChanging();
					this._业绩上限 = value;
					this.SendPropertyChanged("业绩上限");
					this.On业绩上限Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Salary", Storage="_底薪", DbType="Money NOT NULL")]
		public decimal 底薪
		{
			get
			{
				return this._底薪;
			}
			set
			{
				if ((this._底薪 != value))
				{
					this.On底薪Changing(value);
					this.SendPropertyChanging();
					this._底薪 = value;
					this.SendPropertyChanged("底薪");
					this.On底薪Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bonus", Storage="_奖金", DbType="Money NOT NULL")]
		public decimal 奖金
		{
			get
			{
				return this._奖金;
			}
			set
			{
				if ((this._奖金 != value))
				{
					this.On奖金Changing(value);
					this.SendPropertyChanging();
					this._奖金 = value;
					this.SendPropertyChanged("奖金");
					this.On奖金Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Percentage", Storage="_提成比率", DbType="Decimal(18,2) NOT NULL")]
		public decimal 提成比率
		{
			get
			{
				return this._提成比率;
			}
			set
			{
				if ((this._提成比率 != value))
				{
					this.On提成比率Changing(value);
					this.SendPropertyChanging();
					this._提成比率 = value;
					this.SendPropertyChanged("提成比率");
					this.On提成比率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Post_ID", Storage="_职务", DbType="Int NOT NULL")]
		public int 职务
		{
			get
			{
				return this._职务;
			}
			set
			{
				if ((this._职务 != value))
				{
					this.On职务Changing(value);
					this.SendPropertyChanging();
					this._职务 = value;
					this.SendPropertyChanged("职务");
					this.On职务Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Special_Percentage", Storage="_高端提成比率", DbType="Decimal(18,2) NOT NULL")]
		public decimal 高端提成比率
		{
			get
			{
				return this._高端提成比率;
			}
			set
			{
				if ((this._高端提成比率 != value))
				{
					this.On高端提成比率Changing(value);
					this.SendPropertyChanging();
					this._高端提成比率 = value;
					this.SendPropertyChanged("高端提成比率");
					this.On高端提成比率Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Special", Storage="_高端标志", DbType="Bit NOT NULL")]
		public bool 高端标志
		{
			get
			{
				return this._高端标志;
			}
			set
			{
				if ((this._高端标志 != value))
				{
					this.On高端标志Changing(value);
					this.SendPropertyChanging();
					this._高端标志 = value;
					this.SendPropertyChanged("高端标志");
					this.On高端标志Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Commission")]
	public partial class V_Commission
	{
		
		private string _职务;
		
		private decimal _业绩下限;
		
		private decimal _业绩上限;
		
		private decimal _底薪;
		
		private decimal _奖金;
		
		private decimal _提成比率;
		
		private bool _是否高端;
		
		public V_Commission()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Post_Name", Storage="_职务", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 职务
		{
			get
			{
				return this._职务;
			}
			set
			{
				if ((this._职务 != value))
				{
					this._职务 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Low_limit", Storage="_业绩下限", DbType="Money NOT NULL")]
		public decimal 业绩下限
		{
			get
			{
				return this._业绩下限;
			}
			set
			{
				if ((this._业绩下限 != value))
				{
					this._业绩下限 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Up_limit", Storage="_业绩上限", DbType="Money NOT NULL")]
		public decimal 业绩上限
		{
			get
			{
				return this._业绩上限;
			}
			set
			{
				if ((this._业绩上限 != value))
				{
					this._业绩上限 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Salary", Storage="_底薪", DbType="Money NOT NULL")]
		public decimal 底薪
		{
			get
			{
				return this._底薪;
			}
			set
			{
				if ((this._底薪 != value))
				{
					this._底薪 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="bonus", Storage="_奖金", DbType="Money NOT NULL")]
		public decimal 奖金
		{
			get
			{
				return this._奖金;
			}
			set
			{
				if ((this._奖金 != value))
				{
					this._奖金 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Percentage", Storage="_提成比率", DbType="Decimal(18,2) NOT NULL")]
		public decimal 提成比率
		{
			get
			{
				return this._提成比率;
			}
			set
			{
				if ((this._提成比率 != value))
				{
					this._提成比率 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Special", Storage="_是否高端", DbType="Bit NOT NULL")]
		public bool 是否高端
		{
			get
			{
				return this._是否高端;
			}
			set
			{
				if ((this._是否高端 != value))
				{
					this._是否高端 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Pay_Type")]
	public partial class T_Pay_Type : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _支付类型编号;
		
		private string _支付类型名称;
		
		private System.Data.Linq.Binary _支付类型图片;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On支付类型编号Changing(int value);
    partial void On支付类型编号Changed();
    partial void On支付类型名称Changing(string value);
    partial void On支付类型名称Changed();
    partial void On支付类型图片Changing(System.Data.Linq.Binary value);
    partial void On支付类型图片Changed();
    #endregion
		
		public T_Pay_Type()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Pay_Type_ID", Storage="_支付类型编号", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 支付类型编号
		{
			get
			{
				return this._支付类型编号;
			}
			set
			{
				if ((this._支付类型编号 != value))
				{
					this.On支付类型编号Changing(value);
					this.SendPropertyChanging();
					this._支付类型编号 = value;
					this.SendPropertyChanged("支付类型编号");
					this.On支付类型编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Pay_Type_Name", Storage="_支付类型名称", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 支付类型名称
		{
			get
			{
				return this._支付类型名称;
			}
			set
			{
				if ((this._支付类型名称 != value))
				{
					this.On支付类型名称Changing(value);
					this.SendPropertyChanging();
					this._支付类型名称 = value;
					this.SendPropertyChanged("支付类型名称");
					this.On支付类型名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Pay_Type_Im", Storage="_支付类型图片", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary 支付类型图片
		{
			get
			{
				return this._支付类型图片;
			}
			set
			{
				if ((this._支付类型图片 != value))
				{
					this.On支付类型图片Changing(value);
					this.SendPropertyChanging();
					this._支付类型图片 = value;
					this.SendPropertyChanged("支付类型图片");
					this.On支付类型图片Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ReSume")]
	public partial class T_ReSume : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _编号;
		
		private System.Nullable<int> _部门编号;
		
		private string _姓名;
		
		private System.Nullable<bool> _性别;
		
		private System.Nullable<System.DateTime> _年龄;
		
		private string _身份证号;
		
		private System.Nullable<int> _简历类型;
		
		private string _应聘职位;
		
		private string _期待工资;
		
		private string _现在公司;
		
		private string _现在职位;
		
		private string _工作经验;
		
		private string _座机;
		
		private string _手机;
		
		private string _电子邮箱;
		
		private string _居住地;
		
		private string _学历;
		
		private string _学校;
		
		private string _专业;
		
		private System.Nullable<System.DateTime> _应聘日期;
		
		private System.Nullable<System.DateTime> _缴费日期;
		
		private System.Nullable<System.DateTime> _预约日期;
		
		private System.Nullable<System.DateTime> _处理日期;
		
		private System.Nullable<int> _签约类型;
		
		private string _订单号;
		
		private System.Nullable<decimal> _档案费;
		
		private System.Nullable<decimal> _押金;
		
		private System.Nullable<decimal> _服务费;
		
		private System.Nullable<int> _状态;
		
		private System.Nullable<int> _签约状态;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On编号Changing(int value);
    partial void On编号Changed();
    partial void On部门编号Changing(System.Nullable<int> value);
    partial void On部门编号Changed();
    partial void On姓名Changing(string value);
    partial void On姓名Changed();
    partial void On男Changing(System.Nullable<bool> value);
    partial void On男Changed();
    partial void On年龄Changing(System.Nullable<System.DateTime> value);
    partial void On年龄Changed();
    partial void On身份证号Changing(string value);
    partial void On身份证号Changed();
    partial void On简历类型Changing(System.Nullable<int> value);
    partial void On简历类型Changed();
    partial void On应聘职位Changing(string value);
    partial void On应聘职位Changed();
    partial void On期待工资Changing(string value);
    partial void On期待工资Changed();
    partial void On现在公司Changing(string value);
    partial void On现在公司Changed();
    partial void On现在职位Changing(string value);
    partial void On现在职位Changed();
    partial void On工作经验Changing(string value);
    partial void On工作经验Changed();
    partial void On座机Changing(string value);
    partial void On座机Changed();
    partial void On手机Changing(string value);
    partial void On手机Changed();
    partial void On电子邮箱Changing(string value);
    partial void On电子邮箱Changed();
    partial void On居住地Changing(string value);
    partial void On居住地Changed();
    partial void On学历Changing(string value);
    partial void On学历Changed();
    partial void On学校Changing(string value);
    partial void On学校Changed();
    partial void On专业Changing(string value);
    partial void On专业Changed();
    partial void On应聘日期Changing(System.Nullable<System.DateTime> value);
    partial void On应聘日期Changed();
    partial void On缴费日期Changing(System.Nullable<System.DateTime> value);
    partial void On缴费日期Changed();
    partial void On预约日期Changing(System.Nullable<System.DateTime> value);
    partial void On预约日期Changed();
    partial void On处理日期Changing(System.Nullable<System.DateTime> value);
    partial void On处理日期Changed();
    partial void On签约类型Changing(System.Nullable<int> value);
    partial void On签约类型Changed();
    partial void On订单号Changing(string value);
    partial void On订单号Changed();
    partial void On档案费Changing(System.Nullable<decimal> value);
    partial void On档案费Changed();
    partial void On押金Changing(System.Nullable<decimal> value);
    partial void On押金Changed();
    partial void On服务费Changing(System.Nullable<decimal> value);
    partial void On服务费Changed();
    partial void On状态编号Changing(System.Nullable<int> value);
    partial void On状态编号Changed();
    partial void On签约情况编号Changing(System.Nullable<int> value);
    partial void On签约情况编号Changed();
    #endregion
		
		public T_ReSume()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_ID", Storage="_编号", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 编号
		{
			get
			{
				return this._编号;
			}
			set
			{
				if ((this._编号 != value))
				{
					this.On编号Changing(value);
					this.SendPropertyChanging();
					this._编号 = value;
					this.SendPropertyChanged("编号");
					this.On编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_ID", Storage="_部门编号", DbType="Int")]
		public System.Nullable<int> 部门编号
		{
			get
			{
				return this._部门编号;
			}
			set
			{
				if ((this._部门编号 != value))
				{
					this.On部门编号Changing(value);
					this.SendPropertyChanging();
					this._部门编号 = value;
					this.SendPropertyChanged("部门编号");
					this.On部门编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Name", Storage="_姓名", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 姓名
		{
			get
			{
				return this._姓名;
			}
			set
			{
				if ((this._姓名 != value))
				{
					this.On姓名Changing(value);
					this.SendPropertyChanging();
					this._姓名 = value;
					this.SendPropertyChanged("姓名");
					this.On姓名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Sex", Storage="_性别", DbType="Bit")]
		public System.Nullable<bool> 男
		{
			get
			{
				return this._性别;
			}
			set
			{
				if ((this._性别 != value))
				{
					this.On男Changing(value);
					this.SendPropertyChanging();
					this._性别 = value;
					this.SendPropertyChanged("男");
					this.On男Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Age", Storage="_年龄", DbType="Date")]
		public System.Nullable<System.DateTime> 年龄
		{
			get
			{
				return this._年龄;
			}
			set
			{
				if ((this._年龄 != value))
				{
					this.On年龄Changing(value);
					this.SendPropertyChanging();
					this._年龄 = value;
					this.SendPropertyChanged("年龄");
					this.On年龄Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_IDCard", Storage="_身份证号", DbType="VarChar(20)")]
		public string 身份证号
		{
			get
			{
				return this._身份证号;
			}
			set
			{
				if ((this._身份证号 != value))
				{
					this.On身份证号Changing(value);
					this.SendPropertyChanging();
					this._身份证号 = value;
					this.SendPropertyChanged("身份证号");
					this.On身份证号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="R_Type", Storage="_简历类型", DbType="Int")]
		public System.Nullable<int> 简历类型
		{
			get
			{
				return this._简历类型;
			}
			set
			{
				if ((this._简历类型 != value))
				{
					this.On简历类型Changing(value);
					this.SendPropertyChanging();
					this._简历类型 = value;
					this.SendPropertyChanged("简历类型");
					this.On简历类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Postion", Storage="_应聘职位", DbType="VarChar(100)")]
		public string 应聘职位
		{
			get
			{
				return this._应聘职位;
			}
			set
			{
				if ((this._应聘职位 != value))
				{
					this.On应聘职位Changing(value);
					this.SendPropertyChanging();
					this._应聘职位 = value;
					this.SendPropertyChanged("应聘职位");
					this.On应聘职位Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EX_Wages", Storage="_期待工资", DbType="VarChar(100)")]
		public string 期待工资
		{
			get
			{
				return this._期待工资;
			}
			set
			{
				if ((this._期待工资 != value))
				{
					this.On期待工资Changing(value);
					this.SendPropertyChanging();
					this._期待工资 = value;
					this.SendPropertyChanged("期待工资");
					this.On期待工资Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Now_Company", Storage="_现在公司", DbType="VarChar(100)")]
		public string 现在公司
		{
			get
			{
				return this._现在公司;
			}
			set
			{
				if ((this._现在公司 != value))
				{
					this.On现在公司Changing(value);
					this.SendPropertyChanging();
					this._现在公司 = value;
					this.SendPropertyChanged("现在公司");
					this.On现在公司Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Now_Postion", Storage="_现在职位", DbType="VarChar(100)")]
		public string 现在职位
		{
			get
			{
				return this._现在职位;
			}
			set
			{
				if ((this._现在职位 != value))
				{
					this.On现在职位Changing(value);
					this.SendPropertyChanging();
					this._现在职位 = value;
					this.SendPropertyChanged("现在职位");
					this.On现在职位Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Hob", Storage="_工作经验", DbType="VarChar(100)")]
		public string 工作经验
		{
			get
			{
				return this._工作经验;
			}
			set
			{
				if ((this._工作经验 != value))
				{
					this.On工作经验Changing(value);
					this.SendPropertyChanging();
					this._工作经验 = value;
					this.SendPropertyChanged("工作经验");
					this.On工作经验Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tel", Storage="_座机", DbType="VarChar(20)")]
		public string 座机
		{
			get
			{
				return this._座机;
			}
			set
			{
				if ((this._座机 != value))
				{
					this.On座机Changing(value);
					this.SendPropertyChanging();
					this._座机 = value;
					this.SendPropertyChanged("座机");
					this.On座机Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Phone", Storage="_手机", DbType="VarChar(20)")]
		public string 手机
		{
			get
			{
				return this._手机;
			}
			set
			{
				if ((this._手机 != value))
				{
					this.On手机Changing(value);
					this.SendPropertyChanging();
					this._手机 = value;
					this.SendPropertyChanged("手机");
					this.On手机Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Email", Storage="_电子邮箱", DbType="VarChar(50)")]
		public string 电子邮箱
		{
			get
			{
				return this._电子邮箱;
			}
			set
			{
				if ((this._电子邮箱 != value))
				{
					this.On电子邮箱Changing(value);
					this.SendPropertyChanging();
					this._电子邮箱 = value;
					this.SendPropertyChanged("电子邮箱");
					this.On电子邮箱Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Domicle", Storage="_居住地", DbType="VarChar(50)")]
		public string 居住地
		{
			get
			{
				return this._居住地;
			}
			set
			{
				if ((this._居住地 != value))
				{
					this.On居住地Changing(value);
					this.SendPropertyChanging();
					this._居住地 = value;
					this.SendPropertyChanged("居住地");
					this.On居住地Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Education", Storage="_学历", DbType="VarChar(50)")]
		public string 学历
		{
			get
			{
				return this._学历;
			}
			set
			{
				if ((this._学历 != value))
				{
					this.On学历Changing(value);
					this.SendPropertyChanging();
					this._学历 = value;
					this.SendPropertyChanged("学历");
					this.On学历Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="School", Storage="_学校", DbType="VarChar(50)")]
		public string 学校
		{
			get
			{
				return this._学校;
			}
			set
			{
				if ((this._学校 != value))
				{
					this.On学校Changing(value);
					this.SendPropertyChanging();
					this._学校 = value;
					this.SendPropertyChanged("学校");
					this.On学校Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Major", Storage="_专业", DbType="VarChar(50)")]
		public string 专业
		{
			get
			{
				return this._专业;
			}
			set
			{
				if ((this._专业 != value))
				{
					this.On专业Changing(value);
					this.SendPropertyChanging();
					this._专业 = value;
					this.SendPropertyChanged("专业");
					this.On专业Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Date", Storage="_应聘日期", DbType="Date")]
		public System.Nullable<System.DateTime> 应聘日期
		{
			get
			{
				return this._应聘日期;
			}
			set
			{
				if ((this._应聘日期 != value))
				{
					this.On应聘日期Changing(value);
					this.SendPropertyChanging();
					this._应聘日期 = value;
					this.SendPropertyChanged("应聘日期");
					this.On应聘日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sign_Date", Storage="_缴费日期", DbType="Date")]
		public System.Nullable<System.DateTime> 缴费日期
		{
			get
			{
				return this._缴费日期;
			}
			set
			{
				if ((this._缴费日期 != value))
				{
					this.On缴费日期Changing(value);
					this.SendPropertyChanging();
					this._缴费日期 = value;
					this.SendPropertyChanged("缴费日期");
					this.On缴费日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Appointment_Date", Storage="_预约日期", DbType="Date")]
		public System.Nullable<System.DateTime> 预约日期
		{
			get
			{
				return this._预约日期;
			}
			set
			{
				if ((this._预约日期 != value))
				{
					this.On预约日期Changing(value);
					this.SendPropertyChanging();
					this._预约日期 = value;
					this.SendPropertyChanged("预约日期");
					this.On预约日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Hand_Date", Storage="_处理日期", DbType="Date")]
		public System.Nullable<System.DateTime> 处理日期
		{
			get
			{
				return this._处理日期;
			}
			set
			{
				if ((this._处理日期 != value))
				{
					this.On处理日期Changing(value);
					this.SendPropertyChanging();
					this._处理日期 = value;
					this.SendPropertyChanged("处理日期");
					this.On处理日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sign_Type", Storage="_签约类型", DbType="Int")]
		public System.Nullable<int> 签约类型
		{
			get
			{
				return this._签约类型;
			}
			set
			{
				if ((this._签约类型 != value))
				{
					this.On签约类型Changing(value);
					this.SendPropertyChanging();
					this._签约类型 = value;
					this.SendPropertyChanged("签约类型");
					this.On签约类型Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Bill_No", Storage="_订单号", DbType="VarChar(50)")]
		public string 订单号
		{
			get
			{
				return this._订单号;
			}
			set
			{
				if ((this._订单号 != value))
				{
					this.On订单号Changing(value);
					this.SendPropertyChanging();
					this._订单号 = value;
					this.SendPropertyChanged("订单号");
					this.On订单号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Services_Charge", Storage="_档案费", DbType="Money")]
		public System.Nullable<decimal> 档案费
		{
			get
			{
				return this._档案费;
			}
			set
			{
				if ((this._档案费 != value))
				{
					this.On档案费Changing(value);
					this.SendPropertyChanging();
					this._档案费 = value;
					this.SendPropertyChanged("档案费");
					this.On档案费Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Deposit", Storage="_押金", DbType="Money")]
		public System.Nullable<decimal> 押金
		{
			get
			{
				return this._押金;
			}
			set
			{
				if ((this._押金 != value))
				{
					this.On押金Changing(value);
					this.SendPropertyChanging();
					this._押金 = value;
					this.SendPropertyChanged("押金");
					this.On押金Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Special_Cost", Storage="_服务费", DbType="Money")]
		public System.Nullable<decimal> 服务费
		{
			get
			{
				return this._服务费;
			}
			set
			{
				if ((this._服务费 != value))
				{
					this.On服务费Changing(value);
					this.SendPropertyChanging();
					this._服务费 = value;
					this.SendPropertyChanged("服务费");
					this.On服务费Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_State", Storage="_状态", DbType="Int")]
		public System.Nullable<int> 状态编号
		{
			get
			{
				return this._状态;
			}
			set
			{
				if ((this._状态 != value))
				{
					this.On状态编号Changing(value);
					this.SendPropertyChanging();
					this._状态 = value;
					this.SendPropertyChanged("状态编号");
					this.On状态编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sign_State", Storage="_签约状态", DbType="Int")]
		public System.Nullable<int> 签约情况编号
		{
			get
			{
				return this._签约状态;
			}
			set
			{
				if ((this._签约状态 != value))
				{
					this.On签约情况编号Changing(value);
					this.SendPropertyChanging();
					this._签约状态 = value;
					this.SendPropertyChanged("签约情况编号");
					this.On签约情况编号Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Department")]
	public partial class V_Department
	{
		
		private int _部门编号;
		
		private string _部门名称;
		
		private string _经理;
		
		private string _辅助经理;
		
		public V_Department()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_ID", Storage="_部门编号", DbType="Int NOT NULL")]
		public int 部门编号
		{
			get
			{
				return this._部门编号;
			}
			set
			{
				if ((this._部门编号 != value))
				{
					this._部门编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_Name", Storage="_部门名称", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 部门名称
		{
			get
			{
				return this._部门名称;
			}
			set
			{
				if ((this._部门名称 != value))
				{
					this._部门名称 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Manager_Name", Storage="_经理", DbType="VarChar(20)")]
		public string 经理
		{
			get
			{
				return this._经理;
			}
			set
			{
				if ((this._经理 != value))
				{
					this._经理 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Auxiliary_Manager_Name", Storage="_辅助经理", DbType="VarChar(20)")]
		public string 辅助经理
		{
			get
			{
				return this._辅助经理;
			}
			set
			{
				if ((this._辅助经理 != value))
				{
					this._辅助经理 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Employees")]
	public partial class V_Employees
	{
		
		private int _员工编号;
		
		private string _部门;
		
		private string _姓名;
		
		private string _职务;
		
		private string _身份证;
		
		private System.DateTime _入职日期;
		
		private System.Nullable<System.DateTime> _离职日期;
		
		private string _手机;
		
		private decimal _津贴;
		
		private string _备注;
		
		public V_Employees()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emp_ID", Storage="_员工编号", DbType="Int NOT NULL")]
		public int 员工编号
		{
			get
			{
				return this._员工编号;
			}
			set
			{
				if ((this._员工编号 != value))
				{
					this._员工编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_Name", Storage="_部门", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 部门
		{
			get
			{
				return this._部门;
			}
			set
			{
				if ((this._部门 != value))
				{
					this._部门 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emp_Name", Storage="_姓名", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 姓名
		{
			get
			{
				return this._姓名;
			}
			set
			{
				if ((this._姓名 != value))
				{
					this._姓名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Post_Name", Storage="_职务", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 职务
		{
			get
			{
				return this._职务;
			}
			set
			{
				if ((this._职务 != value))
				{
					this._职务 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EDP_IDCard", Storage="_身份证", DbType="VarChar(20)")]
		public string 身份证
		{
			get
			{
				return this._身份证;
			}
			set
			{
				if ((this._身份证 != value))
				{
					this._身份证 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emp_In", Storage="_入职日期", DbType="Date NOT NULL")]
		public System.DateTime 入职日期
		{
			get
			{
				return this._入职日期;
			}
			set
			{
				if ((this._入职日期 != value))
				{
					this._入职日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emp_Out", Storage="_离职日期", DbType="Date")]
		public System.Nullable<System.DateTime> 离职日期
		{
			get
			{
				return this._离职日期;
			}
			set
			{
				if ((this._离职日期 != value))
				{
					this._离职日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Phone", Storage="_手机", DbType="VarChar(20)")]
		public string 手机
		{
			get
			{
				return this._手机;
			}
			set
			{
				if ((this._手机 != value))
				{
					this._手机 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Other_Wages", Storage="_津贴", DbType="Money NOT NULL")]
		public decimal 津贴
		{
			get
			{
				return this._津贴;
			}
			set
			{
				if ((this._津贴 != value))
				{
					this._津贴 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Remark", Storage="_备注", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this._备注 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_State")]
	public partial class T_State : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _状态编号;
		
		private string _状态名称;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On状态编号Changing(int value);
    partial void On状态编号Changed();
    partial void On状态名称Changing(string value);
    partial void On状态名称Changed();
    #endregion
		
		public T_State()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State_ID", Storage="_状态编号", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 状态编号
		{
			get
			{
				return this._状态编号;
			}
			set
			{
				if ((this._状态编号 != value))
				{
					this.On状态编号Changing(value);
					this.SendPropertyChanging();
					this._状态编号 = value;
					this.SendPropertyChanged("状态编号");
					this.On状态编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State_Name", Storage="_状态名称", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 状态名称
		{
			get
			{
				return this._状态名称;
			}
			set
			{
				if ((this._状态名称 != value))
				{
					this.On状态名称Changing(value);
					this.SendPropertyChanging();
					this._状态名称 = value;
					this.SendPropertyChanged("状态名称");
					this.On状态名称Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Sign")]
	public partial class T_Sign : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _签约情况编号;
		
		private string _签约情况;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On签约情况编号Changing(int value);
    partial void On签约情况编号Changed();
    partial void On签约情况Changing(string value);
    partial void On签约情况Changed();
    #endregion
		
		public T_Sign()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sign_ID", Storage="_签约情况编号", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 签约情况编号
		{
			get
			{
				return this._签约情况编号;
			}
			set
			{
				if ((this._签约情况编号 != value))
				{
					this.On签约情况编号Changing(value);
					this.SendPropertyChanging();
					this._签约情况编号 = value;
					this.SendPropertyChanged("签约情况编号");
					this.On签约情况编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sign_Name", Storage="_签约情况", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 签约情况
		{
			get
			{
				return this._签约情况;
			}
			set
			{
				if ((this._签约情况 != value))
				{
					this.On签约情况Changing(value);
					this.SendPropertyChanging();
					this._签约情况 = value;
					this.SendPropertyChanged("签约情况");
					this.On签约情况Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_ReSume")]
	public partial class V_ReSume
	{
		
		private int _简历编号;
		
		private string _部门;
		
		private string _姓名;
		
		private System.Nullable<bool> _性别;
		
		private System.Nullable<System.DateTime> _年龄;
		
		private string _身份证;
		
		private System.Nullable<int> _简历类型;
		
		private string _应聘职位;
		
		private string _期待薪资;
		
		private string _现在公司;
		
		private string _现在职位;
		
		private string _工作经验;
		
		private string _座机;
		
		private string _手机;
		
		private string _电子邮箱;
		
		private string _居住地;
		
		private string _学历;
		
		private string _毕业学校;
		
		private string _专业;
		
		private System.Nullable<System.DateTime> _应聘日期;
		
		private System.Nullable<System.DateTime> _签约日期;
		
		private System.Nullable<System.DateTime> _预约日期;
		
		private System.Nullable<System.DateTime> _处理日期;
		
		private System.Nullable<int> _签约类型;
		
		private string _订单号;
		
		private System.Nullable<decimal> _档案费;
		
		private System.Nullable<decimal> _押金;
		
		private System.Nullable<decimal> _服务费;
		
		private string _状态;
		
		private string _签约情况;
		
		public V_ReSume()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_ID", Storage="_简历编号", DbType="Int NOT NULL")]
		public int 简历编号
		{
			get
			{
				return this._简历编号;
			}
			set
			{
				if ((this._简历编号 != value))
				{
					this._简历编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_Name", Storage="_部门", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 部门
		{
			get
			{
				return this._部门;
			}
			set
			{
				if ((this._部门 != value))
				{
					this._部门 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Name", Storage="_姓名", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 姓名
		{
			get
			{
				return this._姓名;
			}
			set
			{
				if ((this._姓名 != value))
				{
					this._姓名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Sex", Storage="_性别", DbType="Bit")]
		public System.Nullable<bool> 男
		{
			get
			{
				return this._性别;
			}
			set
			{
				if ((this._性别 != value))
				{
					this._性别 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Age", Storage="_年龄", DbType="Date")]
		public System.Nullable<System.DateTime> 年龄
		{
			get
			{
				return this._年龄;
			}
			set
			{
				if ((this._年龄 != value))
				{
					this._年龄 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_IDCard", Storage="_身份证", DbType="VarChar(20)")]
		public string 身份证
		{
			get
			{
				return this._身份证;
			}
			set
			{
				if ((this._身份证 != value))
				{
					this._身份证 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="R_Type", Storage="_简历类型", DbType="Int")]
		public System.Nullable<int> 简历类型
		{
			get
			{
				return this._简历类型;
			}
			set
			{
				if ((this._简历类型 != value))
				{
					this._简历类型 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Postion", Storage="_应聘职位", DbType="VarChar(100)")]
		public string 应聘职位
		{
			get
			{
				return this._应聘职位;
			}
			set
			{
				if ((this._应聘职位 != value))
				{
					this._应聘职位 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="EX_Wages", Storage="_期待薪资", DbType="VarChar(100)")]
		public string 期待薪资
		{
			get
			{
				return this._期待薪资;
			}
			set
			{
				if ((this._期待薪资 != value))
				{
					this._期待薪资 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Now_Company", Storage="_现在公司", DbType="VarChar(100)")]
		public string 现在公司
		{
			get
			{
				return this._现在公司;
			}
			set
			{
				if ((this._现在公司 != value))
				{
					this._现在公司 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Now_Postion", Storage="_现在职位", DbType="VarChar(100)")]
		public string 现在职位
		{
			get
			{
				return this._现在职位;
			}
			set
			{
				if ((this._现在职位 != value))
				{
					this._现在职位 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Hob", Storage="_工作经验", DbType="VarChar(100)")]
		public string 工作经验
		{
			get
			{
				return this._工作经验;
			}
			set
			{
				if ((this._工作经验 != value))
				{
					this._工作经验 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Tel", Storage="_座机", DbType="VarChar(20)")]
		public string 座机
		{
			get
			{
				return this._座机;
			}
			set
			{
				if ((this._座机 != value))
				{
					this._座机 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Phone", Storage="_手机", DbType="VarChar(20)")]
		public string 手机
		{
			get
			{
				return this._手机;
			}
			set
			{
				if ((this._手机 != value))
				{
					this._手机 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Email", Storage="_电子邮箱", DbType="VarChar(50)")]
		public string 电子邮箱
		{
			get
			{
				return this._电子邮箱;
			}
			set
			{
				if ((this._电子邮箱 != value))
				{
					this._电子邮箱 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Domicle", Storage="_居住地", DbType="VarChar(50)")]
		public string 居住地
		{
			get
			{
				return this._居住地;
			}
			set
			{
				if ((this._居住地 != value))
				{
					this._居住地 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Education", Storage="_学历", DbType="VarChar(50)")]
		public string 学历
		{
			get
			{
				return this._学历;
			}
			set
			{
				if ((this._学历 != value))
				{
					this._学历 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="School", Storage="_毕业学校", DbType="VarChar(50)")]
		public string 毕业学校
		{
			get
			{
				return this._毕业学校;
			}
			set
			{
				if ((this._毕业学校 != value))
				{
					this._毕业学校 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Major", Storage="_专业", DbType="VarChar(50)")]
		public string 专业
		{
			get
			{
				return this._专业;
			}
			set
			{
				if ((this._专业 != value))
				{
					this._专业 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Date", Storage="_应聘日期", DbType="Date")]
		public System.Nullable<System.DateTime> 应聘日期
		{
			get
			{
				return this._应聘日期;
			}
			set
			{
				if ((this._应聘日期 != value))
				{
					this._应聘日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sign_Date", Storage="_签约日期", DbType="Date")]
		public System.Nullable<System.DateTime> 签约日期
		{
			get
			{
				return this._签约日期;
			}
			set
			{
				if ((this._签约日期 != value))
				{
					this._签约日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Appointment_Date", Storage="_预约日期", DbType="Date")]
		public System.Nullable<System.DateTime> 预约日期
		{
			get
			{
				return this._预约日期;
			}
			set
			{
				if ((this._预约日期 != value))
				{
					this._预约日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Hand_Date", Storage="_处理日期", DbType="Date")]
		public System.Nullable<System.DateTime> 处理日期
		{
			get
			{
				return this._处理日期;
			}
			set
			{
				if ((this._处理日期 != value))
				{
					this._处理日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sign_Type", Storage="_签约类型", DbType="Int")]
		public System.Nullable<int> 签约类型
		{
			get
			{
				return this._签约类型;
			}
			set
			{
				if ((this._签约类型 != value))
				{
					this._签约类型 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Bill_No", Storage="_订单号", DbType="VarChar(50)")]
		public string 订单号
		{
			get
			{
				return this._订单号;
			}
			set
			{
				if ((this._订单号 != value))
				{
					this._订单号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Services_Charge", Storage="_档案费", DbType="Money")]
		public System.Nullable<decimal> 档案费
		{
			get
			{
				return this._档案费;
			}
			set
			{
				if ((this._档案费 != value))
				{
					this._档案费 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Deposit", Storage="_押金", DbType="Money")]
		public System.Nullable<decimal> 押金
		{
			get
			{
				return this._押金;
			}
			set
			{
				if ((this._押金 != value))
				{
					this._押金 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Special_Cost", Storage="_服务费", DbType="Money")]
		public System.Nullable<decimal> 服务费
		{
			get
			{
				return this._服务费;
			}
			set
			{
				if ((this._服务费 != value))
				{
					this._服务费 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="State_Name", Storage="_状态", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 状态
		{
			get
			{
				return this._状态;
			}
			set
			{
				if ((this._状态 != value))
				{
					this._状态 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Sign_Name", Storage="_签约情况", DbType="VarChar(50) NOT NULL", CanBeNull=false)]
		public string 签约情况
		{
			get
			{
				return this._签约情况;
			}
			set
			{
				if ((this._签约情况 != value))
				{
					this._签约情况 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Enterprise")]
	public partial class T_Enterprise : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _企业编号;
		
		private string _企业名称;
		
		private string _地址;
		
		private string _手机;
		
		private bool _是否招聘;
		
		private string _备注;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On企业编号Changing(int value);
    partial void On企业编号Changed();
    partial void On企业名称Changing(string value);
    partial void On企业名称Changed();
    partial void On地址Changing(string value);
    partial void On地址Changed();
    partial void On手机Changing(string value);
    partial void On手机Changed();
    partial void On是否招聘Changing(bool value);
    partial void On是否招聘Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    #endregion
		
		public T_Enterprise()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Enterprise_ID", Storage="_企业编号", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 企业编号
		{
			get
			{
				return this._企业编号;
			}
			set
			{
				if ((this._企业编号 != value))
				{
					this.On企业编号Changing(value);
					this.SendPropertyChanging();
					this._企业编号 = value;
					this.SendPropertyChanged("企业编号");
					this.On企业编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Enterprise", Storage="_企业名称", DbType="VarChar(100) NOT NULL", CanBeNull=false)]
		public string 企业名称
		{
			get
			{
				return this._企业名称;
			}
			set
			{
				if ((this._企业名称 != value))
				{
					this.On企业名称Changing(value);
					this.SendPropertyChanging();
					this._企业名称 = value;
					this.SendPropertyChanged("企业名称");
					this.On企业名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Address", Storage="_地址", DbType="VarChar(100)")]
		public string 地址
		{
			get
			{
				return this._地址;
			}
			set
			{
				if ((this._地址 != value))
				{
					this.On地址Changing(value);
					this.SendPropertyChanging();
					this._地址 = value;
					this.SendPropertyChanged("地址");
					this.On地址Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Phone", Storage="_手机", DbType="VarChar(20)")]
		public string 手机
		{
			get
			{
				return this._手机;
			}
			set
			{
				if ((this._手机 != value))
				{
					this.On手机Changing(value);
					this.SendPropertyChanging();
					this._手机 = value;
					this.SendPropertyChanged("手机");
					this.On手机Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Need_Emp", Storage="_是否招聘", DbType="Bit NOT NULL")]
		public bool 是否招聘
		{
			get
			{
				return this._是否招聘;
			}
			set
			{
				if ((this._是否招聘 != value))
				{
					this.On是否招聘Changing(value);
					this.SendPropertyChanging();
					this._是否招聘 = value;
					this.SendPropertyChanged("是否招聘");
					this.On是否招聘Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Remark", Storage="_备注", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this.On备注Changing(value);
					this.SendPropertyChanging();
					this._备注 = value;
					this.SendPropertyChanged("备注");
					this.On备注Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Position")]
	public partial class T_Position : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _岗位编号;
		
		private string _岗位名称;
		
		private int _企业编号;
		
		private bool _是否招聘;
		
		private System.Nullable<int> _招聘人数;
		
		private string _简介;
		
		private System.Nullable<bool> _包食宿;
		
		private bool _是否高端;
		
		private decimal _回扣;
		
		private string _备注;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On岗位编号Changing(int value);
    partial void On岗位编号Changed();
    partial void On岗位名称Changing(string value);
    partial void On岗位名称Changed();
    partial void On企业编号Changing(int value);
    partial void On企业编号Changed();
    partial void On是否招聘Changing(bool value);
    partial void On是否招聘Changed();
    partial void On招聘人数Changing(System.Nullable<int> value);
    partial void On招聘人数Changed();
    partial void On简介Changing(string value);
    partial void On简介Changed();
    partial void On包食宿Changing(System.Nullable<bool> value);
    partial void On包食宿Changed();
    partial void On是否高端Changing(bool value);
    partial void On是否高端Changed();
    partial void On回扣Changing(decimal value);
    partial void On回扣Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    #endregion
		
		public T_Position()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Position_ID", Storage="_岗位编号", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 岗位编号
		{
			get
			{
				return this._岗位编号;
			}
			set
			{
				if ((this._岗位编号 != value))
				{
					this.On岗位编号Changing(value);
					this.SendPropertyChanging();
					this._岗位编号 = value;
					this.SendPropertyChanged("岗位编号");
					this.On岗位编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Position_Name", Storage="_岗位名称", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 岗位名称
		{
			get
			{
				return this._岗位名称;
			}
			set
			{
				if ((this._岗位名称 != value))
				{
					this.On岗位名称Changing(value);
					this.SendPropertyChanging();
					this._岗位名称 = value;
					this.SendPropertyChanged("岗位名称");
					this.On岗位名称Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Enterprise_ID", Storage="_企业编号", DbType="Int NOT NULL")]
		public int 企业编号
		{
			get
			{
				return this._企业编号;
			}
			set
			{
				if ((this._企业编号 != value))
				{
					this.On企业编号Changing(value);
					this.SendPropertyChanging();
					this._企业编号 = value;
					this.SendPropertyChanged("企业编号");
					this.On企业编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Need", Storage="_是否招聘", DbType="Bit NOT NULL")]
		public bool 是否招聘
		{
			get
			{
				return this._是否招聘;
			}
			set
			{
				if ((this._是否招聘 != value))
				{
					this.On是否招聘Changing(value);
					this.SendPropertyChanging();
					this._是否招聘 = value;
					this.SendPropertyChanged("是否招聘");
					this.On是否招聘Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Need_No", Storage="_招聘人数", DbType="Int")]
		public System.Nullable<int> 招聘人数
		{
			get
			{
				return this._招聘人数;
			}
			set
			{
				if ((this._招聘人数 != value))
				{
					this.On招聘人数Changing(value);
					this.SendPropertyChanging();
					this._招聘人数 = value;
					this.SendPropertyChanged("招聘人数");
					this.On招聘人数Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Insurance", Storage="_简介", DbType="VarChar(50)")]
		public string 简介
		{
			get
			{
				return this._简介;
			}
			set
			{
				if ((this._简介 != value))
				{
					this.On简介Changing(value);
					this.SendPropertyChanging();
					this._简介 = value;
					this.SendPropertyChanged("简介");
					this.On简介Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Accommodation", Storage="_包食宿", DbType="Bit")]
		public System.Nullable<bool> 包食宿
		{
			get
			{
				return this._包食宿;
			}
			set
			{
				if ((this._包食宿 != value))
				{
					this.On包食宿Changing(value);
					this.SendPropertyChanging();
					this._包食宿 = value;
					this.SendPropertyChanged("包食宿");
					this.On包食宿Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Senior", Storage="_是否高端", DbType="Bit NOT NULL")]
		public bool 是否高端
		{
			get
			{
				return this._是否高端;
			}
			set
			{
				if ((this._是否高端 != value))
				{
					this.On是否高端Changing(value);
					this.SendPropertyChanging();
					this._是否高端 = value;
					this.SendPropertyChanged("是否高端");
					this.On是否高端Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Reback", Storage="_回扣", DbType="Money NOT NULL")]
		public decimal 回扣
		{
			get
			{
				return this._回扣;
			}
			set
			{
				if ((this._回扣 != value))
				{
					this.On回扣Changing(value);
					this.SendPropertyChanging();
					this._回扣 = value;
					this.SendPropertyChanged("回扣");
					this.On回扣Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Remark", Storage="_备注", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._备注;
			}
			set
			{
				if ((this._备注 != value))
				{
					this.On备注Changing(value);
					this.SendPropertyChanging();
					this._备注 = value;
					this.SendPropertyChanged("备注");
					this.On备注Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Employees")]
	public partial class T_EmployessPw : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _Emp_ID;
		
		private int _Department_ID;
		
		private string _Emp_Name;
		
		private int _Post_ID;
		
		private string _Remark;
		
		private string _Pw;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On员工编号Changing(int value);
    partial void On员工编号Changed();
    partial void On部门编号Changing(int value);
    partial void On部门编号Changed();
    partial void On员工姓名Changing(string value);
    partial void On员工姓名Changed();
    partial void On职位编号Changing(int value);
    partial void On职位编号Changed();
    partial void On备注Changing(string value);
    partial void On备注Changed();
    partial void On密码Changing(string value);
    partial void On密码Changed();
    #endregion
		
		public T_EmployessPw()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emp_ID", Storage="_Emp_ID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 员工编号
		{
			get
			{
				return this._Emp_ID;
			}
			set
			{
				if ((this._Emp_ID != value))
				{
					this.On员工编号Changing(value);
					this.SendPropertyChanging();
					this._Emp_ID = value;
					this.SendPropertyChanged("员工编号");
					this.On员工编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_ID", Storage="_Department_ID", DbType="Int NOT NULL")]
		public int 部门编号
		{
			get
			{
				return this._Department_ID;
			}
			set
			{
				if ((this._Department_ID != value))
				{
					this.On部门编号Changing(value);
					this.SendPropertyChanging();
					this._Department_ID = value;
					this.SendPropertyChanged("部门编号");
					this.On部门编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Emp_Name", Storage="_Emp_Name", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 员工姓名
		{
			get
			{
				return this._Emp_Name;
			}
			set
			{
				if ((this._Emp_Name != value))
				{
					this.On员工姓名Changing(value);
					this.SendPropertyChanging();
					this._Emp_Name = value;
					this.SendPropertyChanged("员工姓名");
					this.On员工姓名Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Post_ID", Storage="_Post_ID", DbType="Int NOT NULL")]
		public int 职位编号
		{
			get
			{
				return this._Post_ID;
			}
			set
			{
				if ((this._Post_ID != value))
				{
					this.On职位编号Changing(value);
					this.SendPropertyChanging();
					this._Post_ID = value;
					this.SendPropertyChanged("职位编号");
					this.On职位编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Remark", Storage="_Remark", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string 备注
		{
			get
			{
				return this._Remark;
			}
			set
			{
				if ((this._Remark != value))
				{
					this.On备注Changing(value);
					this.SendPropertyChanging();
					this._Remark = value;
					this.SendPropertyChanged("备注");
					this.On备注Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Pw", Storage="_Pw", DbType="Text", UpdateCheck=UpdateCheck.Never)]
		public string 密码
		{
			get
			{
				return this._Pw;
			}
			set
			{
				if ((this._Pw != value))
				{
					this.On密码Changing(value);
					this.SendPropertyChanging();
					this._Pw = value;
					this.SendPropertyChanged("密码");
					this.On密码Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Appointments")]
	public partial class Appointments : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UniqueID;
		
		private System.Nullable<int> _Type;
		
		private System.Nullable<System.DateTime> _StartDate;
		
		private System.Nullable<System.DateTime> _EndDate;
		
		private System.Nullable<bool> _AllDay;
		
		private string _Subject;
		
		private string _Location;
		
		private string _Description;
		
		private System.Nullable<int> _Status;
		
		private System.Nullable<int> _Label;
		
		private System.Nullable<int> _ResourceID;
		
		private string _ResourceIDs;
		
		private string _ReminderInfo;
		
		private string _RecurrenceInfo;
		
		private string _TimeZoneId;
		
		private string _CustomField1;
		
		private System.Nullable<int> _Emp_ID;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(int value);
    partial void OnUniqueIDChanged();
    partial void OnTypeChanging(System.Nullable<int> value);
    partial void OnTypeChanged();
    partial void OnStartDateChanging(System.Nullable<System.DateTime> value);
    partial void OnStartDateChanged();
    partial void OnEndDateChanging(System.Nullable<System.DateTime> value);
    partial void OnEndDateChanged();
    partial void OnAllDayChanging(System.Nullable<bool> value);
    partial void OnAllDayChanged();
    partial void OnSubjectChanging(string value);
    partial void OnSubjectChanged();
    partial void OnLocationChanging(string value);
    partial void OnLocationChanged();
    partial void OnDescriptionChanging(string value);
    partial void OnDescriptionChanged();
    partial void OnStatusChanging(System.Nullable<int> value);
    partial void OnStatusChanged();
    partial void OnLabelChanging(System.Nullable<int> value);
    partial void OnLabelChanged();
    partial void OnResourceIDChanging(System.Nullable<int> value);
    partial void OnResourceIDChanged();
    partial void OnResourceIDsChanging(string value);
    partial void OnResourceIDsChanged();
    partial void OnReminderInfoChanging(string value);
    partial void OnReminderInfoChanged();
    partial void OnRecurrenceInfoChanging(string value);
    partial void OnRecurrenceInfoChanged();
    partial void OnTimeZoneIdChanging(string value);
    partial void OnTimeZoneIdChanged();
    partial void OnCustomField1Changing(string value);
    partial void OnCustomField1Changed();
    partial void OnEmp_IDChanging(System.Nullable<int> value);
    partial void OnEmp_IDChanged();
    #endregion
		
		public Appointments()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Type", DbType="Int")]
		public System.Nullable<int> Type
		{
			get
			{
				return this._Type;
			}
			set
			{
				if ((this._Type != value))
				{
					this.OnTypeChanging(value);
					this.SendPropertyChanging();
					this._Type = value;
					this.SendPropertyChanged("Type");
					this.OnTypeChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_StartDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> StartDate
		{
			get
			{
				return this._StartDate;
			}
			set
			{
				if ((this._StartDate != value))
				{
					this.OnStartDateChanging(value);
					this.SendPropertyChanging();
					this._StartDate = value;
					this.SendPropertyChanged("StartDate");
					this.OnStartDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_EndDate", DbType="SmallDateTime")]
		public System.Nullable<System.DateTime> EndDate
		{
			get
			{
				return this._EndDate;
			}
			set
			{
				if ((this._EndDate != value))
				{
					this.OnEndDateChanging(value);
					this.SendPropertyChanging();
					this._EndDate = value;
					this.SendPropertyChanged("EndDate");
					this.OnEndDateChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_AllDay", DbType="Bit")]
		public System.Nullable<bool> AllDay
		{
			get
			{
				return this._AllDay;
			}
			set
			{
				if ((this._AllDay != value))
				{
					this.OnAllDayChanging(value);
					this.SendPropertyChanging();
					this._AllDay = value;
					this.SendPropertyChanged("AllDay");
					this.OnAllDayChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Subject", DbType="NVarChar(50)")]
		public string Subject
		{
			get
			{
				return this._Subject;
			}
			set
			{
				if ((this._Subject != value))
				{
					this.OnSubjectChanging(value);
					this.SendPropertyChanging();
					this._Subject = value;
					this.SendPropertyChanged("Subject");
					this.OnSubjectChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Location", DbType="NVarChar(50)")]
		public string Location
		{
			get
			{
				return this._Location;
			}
			set
			{
				if ((this._Location != value))
				{
					this.OnLocationChanging(value);
					this.SendPropertyChanging();
					this._Location = value;
					this.SendPropertyChanged("Location");
					this.OnLocationChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Description", DbType="NVarChar(MAX)")]
		public string Description
		{
			get
			{
				return this._Description;
			}
			set
			{
				if ((this._Description != value))
				{
					this.OnDescriptionChanging(value);
					this.SendPropertyChanging();
					this._Description = value;
					this.SendPropertyChanged("Description");
					this.OnDescriptionChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Status", DbType="Int")]
		public System.Nullable<int> Status
		{
			get
			{
				return this._Status;
			}
			set
			{
				if ((this._Status != value))
				{
					this.OnStatusChanging(value);
					this.SendPropertyChanging();
					this._Status = value;
					this.SendPropertyChanged("Status");
					this.OnStatusChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Label", DbType="Int")]
		public System.Nullable<int> Label
		{
			get
			{
				return this._Label;
			}
			set
			{
				if ((this._Label != value))
				{
					this.OnLabelChanging(value);
					this.SendPropertyChanging();
					this._Label = value;
					this.SendPropertyChanged("Label");
					this.OnLabelChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="Int")]
		public System.Nullable<int> ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceIDs", DbType="NVarChar(MAX)")]
		public string ResourceIDs
		{
			get
			{
				return this._ResourceIDs;
			}
			set
			{
				if ((this._ResourceIDs != value))
				{
					this.OnResourceIDsChanging(value);
					this.SendPropertyChanging();
					this._ResourceIDs = value;
					this.SendPropertyChanged("ResourceIDs");
					this.OnResourceIDsChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ReminderInfo", DbType="NVarChar(MAX)")]
		public string ReminderInfo
		{
			get
			{
				return this._ReminderInfo;
			}
			set
			{
				if ((this._ReminderInfo != value))
				{
					this.OnReminderInfoChanging(value);
					this.SendPropertyChanging();
					this._ReminderInfo = value;
					this.SendPropertyChanged("ReminderInfo");
					this.OnReminderInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_RecurrenceInfo", DbType="NVarChar(MAX)")]
		public string RecurrenceInfo
		{
			get
			{
				return this._RecurrenceInfo;
			}
			set
			{
				if ((this._RecurrenceInfo != value))
				{
					this.OnRecurrenceInfoChanging(value);
					this.SendPropertyChanging();
					this._RecurrenceInfo = value;
					this.SendPropertyChanged("RecurrenceInfo");
					this.OnRecurrenceInfoChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_TimeZoneId", DbType="NVarChar(MAX)")]
		public string TimeZoneId
		{
			get
			{
				return this._TimeZoneId;
			}
			set
			{
				if ((this._TimeZoneId != value))
				{
					this.OnTimeZoneIdChanging(value);
					this.SendPropertyChanging();
					this._TimeZoneId = value;
					this.SendPropertyChanged("TimeZoneId");
					this.OnTimeZoneIdChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField1", DbType="NVarChar(MAX)")]
		public string CustomField1
		{
			get
			{
				return this._CustomField1;
			}
			set
			{
				if ((this._CustomField1 != value))
				{
					this.OnCustomField1Changing(value);
					this.SendPropertyChanging();
					this._CustomField1 = value;
					this.SendPropertyChanged("CustomField1");
					this.OnCustomField1Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Emp_ID", DbType="Int")]
		public System.Nullable<int> Emp_ID
		{
			get
			{
				return this._Emp_ID;
			}
			set
			{
				if ((this._Emp_ID != value))
				{
					this.OnEmp_IDChanging(value);
					this.SendPropertyChanging();
					this._Emp_ID = value;
					this.SendPropertyChanged("Emp_ID");
					this.OnEmp_IDChanged();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.Resources")]
	public partial class Resources : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _UniqueID;
		
		private int _ResourceID;
		
		private string _ResourceName;
		
		private System.Nullable<int> _Color;
		
		private System.Data.Linq.Binary _Image;
		
		private string _CustomField1;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void OnUniqueIDChanging(int value);
    partial void OnUniqueIDChanged();
    partial void OnResourceIDChanging(int value);
    partial void OnResourceIDChanged();
    partial void OnResourceNameChanging(string value);
    partial void OnResourceNameChanged();
    partial void OnColorChanging(System.Nullable<int> value);
    partial void OnColorChanged();
    partial void OnImageChanging(System.Data.Linq.Binary value);
    partial void OnImageChanged();
    partial void OnCustomField1Changing(string value);
    partial void OnCustomField1Changed();
    #endregion
		
		public Resources()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_UniqueID", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int UniqueID
		{
			get
			{
				return this._UniqueID;
			}
			set
			{
				if ((this._UniqueID != value))
				{
					this.OnUniqueIDChanging(value);
					this.SendPropertyChanging();
					this._UniqueID = value;
					this.SendPropertyChanged("UniqueID");
					this.OnUniqueIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceID", DbType="Int NOT NULL")]
		public int ResourceID
		{
			get
			{
				return this._ResourceID;
			}
			set
			{
				if ((this._ResourceID != value))
				{
					this.OnResourceIDChanging(value);
					this.SendPropertyChanging();
					this._ResourceID = value;
					this.SendPropertyChanged("ResourceID");
					this.OnResourceIDChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_ResourceName", DbType="NVarChar(50)")]
		public string ResourceName
		{
			get
			{
				return this._ResourceName;
			}
			set
			{
				if ((this._ResourceName != value))
				{
					this.OnResourceNameChanging(value);
					this.SendPropertyChanging();
					this._ResourceName = value;
					this.SendPropertyChanged("ResourceName");
					this.OnResourceNameChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Color", DbType="Int")]
		public System.Nullable<int> Color
		{
			get
			{
				return this._Color;
			}
			set
			{
				if ((this._Color != value))
				{
					this.OnColorChanging(value);
					this.SendPropertyChanging();
					this._Color = value;
					this.SendPropertyChanged("Color");
					this.OnColorChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_Image", DbType="Image", UpdateCheck=UpdateCheck.Never)]
		public System.Data.Linq.Binary Image
		{
			get
			{
				return this._Image;
			}
			set
			{
				if ((this._Image != value))
				{
					this.OnImageChanging(value);
					this.SendPropertyChanging();
					this._Image = value;
					this.SendPropertyChanged("Image");
					this.OnImageChanged();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_CustomField1", DbType="NVarChar(MAX)")]
		public string CustomField1
		{
			get
			{
				return this._CustomField1;
			}
			set
			{
				if ((this._CustomField1 != value))
				{
					this.OnCustomField1Changing(value);
					this.SendPropertyChanging();
					this._CustomField1 = value;
					this.SendPropertyChanged("CustomField1");
					this.OnCustomField1Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_Achievement")]
	public partial class T_Achievement : INotifyPropertyChanging, INotifyPropertyChanged
	{
		
		private static PropertyChangingEventArgs emptyChangingEventArgs = new PropertyChangingEventArgs(String.Empty);
		
		private int _业绩编号;
		
		private System.DateTime _业绩日期;
		
		private System.Nullable<int> _部门编号;
		
		private System.Nullable<int> _简历编号;
		
		private string _缴费单号;
		
		private int _业绩状态;
		
    #region 可扩展性方法定义
    partial void OnLoaded();
    partial void OnValidate(System.Data.Linq.ChangeAction action);
    partial void OnCreated();
    partial void On业绩编号Changing(int value);
    partial void On业绩编号Changed();
    partial void On业绩日期Changing(System.DateTime value);
    partial void On业绩日期Changed();
    partial void On部门编号Changing(System.Nullable<int> value);
    partial void On部门编号Changed();
    partial void On简历编号Changing(System.Nullable<int> value);
    partial void On简历编号Changed();
    partial void On缴费单号Changing(string value);
    partial void On缴费单号Changed();
    partial void On业绩状态Changing(int value);
    partial void On业绩状态Changed();
    #endregion
		
		public T_Achievement()
		{
			OnCreated();
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="YJ_ID", Storage="_业绩编号", AutoSync=AutoSync.OnInsert, DbType="Int NOT NULL IDENTITY", IsPrimaryKey=true, IsDbGenerated=true)]
		public int 业绩编号
		{
			get
			{
				return this._业绩编号;
			}
			set
			{
				if ((this._业绩编号 != value))
				{
					this.On业绩编号Changing(value);
					this.SendPropertyChanging();
					this._业绩编号 = value;
					this.SendPropertyChanged("业绩编号");
					this.On业绩编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="YJ_Date", Storage="_业绩日期", DbType="Date NOT NULL")]
		public System.DateTime 业绩日期
		{
			get
			{
				return this._业绩日期;
			}
			set
			{
				if ((this._业绩日期 != value))
				{
					this.On业绩日期Changing(value);
					this.SendPropertyChanging();
					this._业绩日期 = value;
					this.SendPropertyChanged("业绩日期");
					this.On业绩日期Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_ID", Storage="_部门编号", DbType="Int")]
		public System.Nullable<int> 部门编号
		{
			get
			{
				return this._部门编号;
			}
			set
			{
				if ((this._部门编号 != value))
				{
					this.On部门编号Changing(value);
					this.SendPropertyChanging();
					this._部门编号 = value;
					this.SendPropertyChanged("部门编号");
					this.On部门编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_ID", Storage="_简历编号", DbType="Int")]
		public System.Nullable<int> 简历编号
		{
			get
			{
				return this._简历编号;
			}
			set
			{
				if ((this._简历编号 != value))
				{
					this.On简历编号Changing(value);
					this.SendPropertyChanging();
					this._简历编号 = value;
					this.SendPropertyChanged("简历编号");
					this.On简历编号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Bill_No", Storage="_缴费单号", DbType="VarChar(50)")]
		public string 缴费单号
		{
			get
			{
				return this._缴费单号;
			}
			set
			{
				if ((this._缴费单号 != value))
				{
					this.On缴费单号Changing(value);
					this.SendPropertyChanging();
					this._缴费单号 = value;
					this.SendPropertyChanged("缴费单号");
					this.On缴费单号Changed();
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Achi_State", Storage="_业绩状态", DbType="Int NOT NULL")]
		public int 业绩状态
		{
			get
			{
				return this._业绩状态;
			}
			set
			{
				if ((this._业绩状态 != value))
				{
					this.On业绩状态Changing(value);
					this.SendPropertyChanging();
					this._业绩状态 = value;
					this.SendPropertyChanged("业绩状态");
					this.On业绩状态Changed();
				}
			}
		}
		
		public event PropertyChangingEventHandler PropertyChanging;
		
		public event PropertyChangedEventHandler PropertyChanged;
		
		protected virtual void SendPropertyChanging()
		{
			if ((this.PropertyChanging != null))
			{
				this.PropertyChanging(this, emptyChangingEventArgs);
			}
		}
		
		protected virtual void SendPropertyChanged(String propertyName)
		{
			if ((this.PropertyChanged != null))
			{
				this.PropertyChanged(this, new PropertyChangedEventArgs(propertyName));
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_PayList")]
	public partial class T_PayList
	{
		
		private int _支付编号;
		
		private int _业绩编号;
		
		private int _支付方式编号;
		
		private decimal _支付金额;
		
		public T_PayList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="PayList_ID", Storage="_支付编号", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int 支付编号
		{
			get
			{
				return this._支付编号;
			}
			set
			{
				if ((this._支付编号 != value))
				{
					this._支付编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="YJ_ID", Storage="_业绩编号", DbType="Int NOT NULL")]
		public int 业绩编号
		{
			get
			{
				return this._业绩编号;
			}
			set
			{
				if ((this._业绩编号 != value))
				{
					this._业绩编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Pay_Type_ID", Storage="_支付方式编号", DbType="Int NOT NULL")]
		public int 支付方式编号
		{
			get
			{
				return this._支付方式编号;
			}
			set
			{
				if ((this._支付方式编号 != value))
				{
					this._支付方式编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Pay_NO", Storage="_支付金额", DbType="Money NOT NULL")]
		public decimal 支付金额
		{
			get
			{
				return this._支付金额;
			}
			set
			{
				if ((this._支付金额 != value))
				{
					this._支付金额 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.T_ChargeList")]
	public partial class T_ChargeList
	{
		
		private int _缴费编号;
		
		private int _业绩编号;
		
		private int _收费类型;
		
		private decimal _收费金额;
		
		private decimal _公关费用;
		
		private System.DateTime _收费日期;
		
		private System.Nullable<System.DateTime> _完成日期;
		
		private bool _是否完成;
		
		public T_ChargeList()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="ChargeList_ID", Storage="_缴费编号", AutoSync=AutoSync.Always, DbType="Int NOT NULL IDENTITY", IsDbGenerated=true)]
		public int 缴费编号
		{
			get
			{
				return this._缴费编号;
			}
			set
			{
				if ((this._缴费编号 != value))
				{
					this._缴费编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="YJ_ID", Storage="_业绩编号", DbType="Int NOT NULL")]
		public int 业绩编号
		{
			get
			{
				return this._业绩编号;
			}
			set
			{
				if ((this._业绩编号 != value))
				{
					this._业绩编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="InCome_Type_ID", Storage="_收费类型", DbType="Int NOT NULL")]
		public int 收费类型
		{
			get
			{
				return this._收费类型;
			}
			set
			{
				if ((this._收费类型 != value))
				{
					this._收费类型 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Cost", Storage="_收费金额", DbType="Money NOT NULL")]
		public decimal 收费金额
		{
			get
			{
				return this._收费金额;
			}
			set
			{
				if ((this._收费金额 != value))
				{
					this._收费金额 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Done_ReBate", Storage="_公关费用", DbType="Money NOT NULL")]
		public decimal 公关费用
		{
			get
			{
				return this._公关费用;
			}
			set
			{
				if ((this._公关费用 != value))
				{
					this._公关费用 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="App_Date", Storage="_收费日期", DbType="DateTime NOT NULL")]
		public System.DateTime 收费日期
		{
			get
			{
				return this._收费日期;
			}
			set
			{
				if ((this._收费日期 != value))
				{
					this._收费日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Done_Date", Storage="_完成日期", DbType="DateTime")]
		public System.Nullable<System.DateTime> 完成日期
		{
			get
			{
				return this._完成日期;
			}
			set
			{
				if ((this._完成日期 != value))
				{
					this._完成日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Done", Storage="_是否完成", DbType="Bit NOT NULL")]
		public bool 是否完成
		{
			get
			{
				return this._是否完成;
			}
			set
			{
				if ((this._是否完成 != value))
				{
					this._是否完成 = value;
				}
			}
		}
	}
	
	[global::System.Data.Linq.Mapping.TableAttribute(Name="dbo.V_Achievement")]
	public partial class V_Achievement
	{
		
		private int _业绩编号;
		
		private System.DateTime _业绩日期;
		
		private string _部门名称;
		
		private System.Nullable<int> _简历编号;
		
		private string _应聘者姓名;
		
		private string _身份证;
		
		private string _收款项目;
		
		private System.Nullable<decimal> _收费金额;
		
		private System.Nullable<decimal> _公关金额;
		
		private System.Nullable<System.DateTime> _收款日期;
		
		private System.Nullable<System.DateTime> _完成日期;
		
		private System.Nullable<bool> _是否完成;
		
		private string _缴费单号;
		
		private int _业绩状态;
		
		public V_Achievement()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="YJ_ID", Storage="_业绩编号", DbType="Int NOT NULL")]
		public int 业绩编号
		{
			get
			{
				return this._业绩编号;
			}
			set
			{
				if ((this._业绩编号 != value))
				{
					this._业绩编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="YJ_Date", Storage="_业绩日期", DbType="Date NOT NULL")]
		public System.DateTime 业绩日期
		{
			get
			{
				return this._业绩日期;
			}
			set
			{
				if ((this._业绩日期 != value))
				{
					this._业绩日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Department_Name", Storage="_部门名称", DbType="VarChar(20) NOT NULL", CanBeNull=false)]
		public string 部门名称
		{
			get
			{
				return this._部门名称;
			}
			set
			{
				if ((this._部门名称 != value))
				{
					this._部门名称 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_ID", Storage="_简历编号", DbType="Int")]
		public System.Nullable<int> 简历编号
		{
			get
			{
				return this._简历编号;
			}
			set
			{
				if ((this._简历编号 != value))
				{
					this._简历编号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_Name", Storage="_应聘者姓名", DbType="VarChar(20)")]
		public string 应聘者姓名
		{
			get
			{
				return this._应聘者姓名;
			}
			set
			{
				if ((this._应聘者姓名 != value))
				{
					this._应聘者姓名 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="A_IDCard", Storage="_身份证", DbType="VarChar(20)")]
		public string 身份证
		{
			get
			{
				return this._身份证;
			}
			set
			{
				if ((this._身份证 != value))
				{
					this._身份证 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="InCome_Type_Name", Storage="_收款项目", DbType="VarChar(20)")]
		public string 收款项目
		{
			get
			{
				return this._收款项目;
			}
			set
			{
				if ((this._收款项目 != value))
				{
					this._收款项目 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Cost", Storage="_收费金额", DbType="Money")]
		public System.Nullable<decimal> 收费金额
		{
			get
			{
				return this._收费金额;
			}
			set
			{
				if ((this._收费金额 != value))
				{
					this._收费金额 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Done_ReBate", Storage="_公关金额", DbType="Money")]
		public System.Nullable<decimal> 公关金额
		{
			get
			{
				return this._公关金额;
			}
			set
			{
				if ((this._公关金额 != value))
				{
					this._公关金额 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="App_Date", Storage="_收款日期", DbType="DateTime")]
		public System.Nullable<System.DateTime> 收款日期
		{
			get
			{
				return this._收款日期;
			}
			set
			{
				if ((this._收款日期 != value))
				{
					this._收款日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Done_Date", Storage="_完成日期", DbType="DateTime")]
		public System.Nullable<System.DateTime> 完成日期
		{
			get
			{
				return this._完成日期;
			}
			set
			{
				if ((this._完成日期 != value))
				{
					this._完成日期 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Done", Storage="_是否完成", DbType="Bit")]
		public System.Nullable<bool> 是否完成
		{
			get
			{
				return this._是否完成;
			}
			set
			{
				if ((this._是否完成 != value))
				{
					this._是否完成 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Bill_No", Storage="_缴费单号", DbType="VarChar(50)")]
		public string 缴费单号
		{
			get
			{
				return this._缴费单号;
			}
			set
			{
				if ((this._缴费单号 != value))
				{
					this._缴费单号 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Name="Achi_State", Storage="_业绩状态", DbType="Int NOT NULL")]
		public int 业绩状态
		{
			get
			{
				return this._业绩状态;
			}
			set
			{
				if ((this._业绩状态 != value))
				{
					this._业绩状态 = value;
				}
			}
		}
	}
	
	public partial class GETUNTREATED_RESUMEResult
	{
		
		private System.Nullable<int> _未处理;
		
		private System.Nullable<int> _已拨打;
		
		private System.Nullable<int> _无意上门;
		
		private System.Nullable<int> _预约上门;
		
		private System.Nullable<int> _未上门;
		
		private System.Nullable<int> _上门未签约;
		
		private System.Nullable<int> _已签约;
		
		public GETUNTREATED_RESUMEResult()
		{
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_未处理", DbType="Int")]
		public System.Nullable<int> 未处理
		{
			get
			{
				return this._未处理;
			}
			set
			{
				if ((this._未处理 != value))
				{
					this._未处理 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_已拨打", DbType="Int")]
		public System.Nullable<int> 已拨打
		{
			get
			{
				return this._已拨打;
			}
			set
			{
				if ((this._已拨打 != value))
				{
					this._已拨打 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_无意上门", DbType="Int")]
		public System.Nullable<int> 无意上门
		{
			get
			{
				return this._无意上门;
			}
			set
			{
				if ((this._无意上门 != value))
				{
					this._无意上门 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_预约上门", DbType="Int")]
		public System.Nullable<int> 预约上门
		{
			get
			{
				return this._预约上门;
			}
			set
			{
				if ((this._预约上门 != value))
				{
					this._预约上门 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_未上门", DbType="Int")]
		public System.Nullable<int> 未上门
		{
			get
			{
				return this._未上门;
			}
			set
			{
				if ((this._未上门 != value))
				{
					this._未上门 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_上门未签约", DbType="Int")]
		public System.Nullable<int> 上门未签约
		{
			get
			{
				return this._上门未签约;
			}
			set
			{
				if ((this._上门未签约 != value))
				{
					this._上门未签约 = value;
				}
			}
		}
		
		[global::System.Data.Linq.Mapping.ColumnAttribute(Storage="_已签约", DbType="Int")]
		public System.Nullable<int> 已签约
		{
			get
			{
				return this._已签约;
			}
			set
			{
				if ((this._已签约 != value))
				{
					this._已签约 = value;
				}
			}
		}
	}
}
#pragma warning restore 1591
